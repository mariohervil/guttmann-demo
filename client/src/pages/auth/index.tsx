import Head from 'next/head';
import { useState, useEffect } from 'react';
import axios, { AxiosError, AxiosResponse } from 'axios';
import { useRouter } from 'next/router';
import Link from 'next/link';
const Auth = () => {
	const [username, handleUsername] = useState<String>('');
	const [password, handlePassword] = useState<String>('');
	const router = useRouter();
	const date = new Date();
	useEffect(() => {
		axios
			.get('http://localhost:8080/auth')
			.then((response: AxiosResponse) => {})
			.catch((error: AxiosError) => {});
	}, []);

	const validateForm = async () => {
		if (username.length >= 0 || password.length >= 0) {
			try {
				await axios
					.post(
						'http://localhost:8080/auth/login/',
						{
							username,
							password,
						},
						{
							// & Para enviar la cookie de la sesiÃ³n al servidor.
							withCredentials: true,
						}
					)
					.then((response: AxiosResponse) => {
						if (response.status === 200) {
							console.log(response.data);
							// Temporal
							router.push('games/forms');
						}
					})
					.catch((error: any) => {
						console.log(error.response?.data?.reason);
					});
			} catch (error: any) {
				if (error?.response?.data?.message) {
					return console.log(
						'A login error has been appeared: ' + error?.response?.data?.message
					);
				}
			}
		}

		return false;
	};

	return (
		<>
			<Head>
				<title>Guttmann</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<button
				className="btn btn-primary"
				onClick={() => {
					router.push('/games/wordgame');
				}}
			>
				Ir al juego
			</button>
			<div className="w-full max-w-xs center-screen">
				<form className="flex flex-col gap-4 bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
					<div className="form-control w-full max-w-xs">
						<label className="label">
							<span className="label-text font-bold">Username</span>
						</label>
						<input
							onChange={(e) => handleUsername(e.target.value)}
							id="text"
							type="text"
							placeholder="Username"
							className="input input-bordered w-full max-w-xs focus:outline-primary focus:border-none"
						/>
					</div>

					<div className="form-control w-full max-w-xs">
						<label className="label">
							<span className="label-text font-bold">Password</span>
						</label>
						<input
							onChange={(e) => handlePassword(e.target.value)}
							id="password"
							type="password"
							placeholder="Password"
							className="input input-bordered w-full max-w-xs focus:outline-primary focus:border-none"
						/>
					</div>

					<div className="flex flex-col gap-4">
						<div className="flex items-center justify-between mt-4">
							<button
								className="btn btn-primary btn-wide"
								type="button"
								onClick={() => validateForm()}
							>
								Login
							</button>
						</div>
					</div>
				</form>
				<p className="text-center text-gray-500 text-xs">
					&copy;{date.getFullYear()} Guttmann, all rights reserved.
				</p>
			</div>
		</>
	);
};

export default Auth;
